package com.tool.gui;

import com.tool.control.DoublyLinkedList;
import javax.swing.*;
import java.awt.*;

public class MainFrame extends javax.swing.JFrame {

    private DoublyLinkedList playlist;
    private PlaylistPanel playlistPanel;
    private ControlPanel controlPanel;

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        playlist = new DoublyLinkedList();
        initComponents();
        initializeCustomComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Moodify - Smart Playlist Manager");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null); // Center on screen
    }

    /**
     * Initialize the custom components 
     */
    private void initializeCustomComponents() {
        // Create main panels
        playlistPanel = new PlaylistPanel(playlist);
        controlPanel = new ControlPanel(playlist, playlistPanel);

        // Add to JFrame
        getContentPane().setLayout(new BorderLayout());
        getContentPane().add(playlistPanel, BorderLayout.CENTER);
        getContentPane().add(controlPanel, BorderLayout.SOUTH);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MainFrame().setVisible(true);
        });
    }
}
